/*
 * Wazuh storeRemediationsModel
 * Copyright (C) 2015, Wazuh Inc.
 * October 05, 2023.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#include "updateHotfixes_test.hpp"
#include "flatbuffers/idl.h"
#include "flatbuffers/util.h"
#include <memory>

constexpr auto COMMON_DATABASE_DIR {"queue/vd"}; //<<Used for all databases
const std::string FLATBUFFER_SCHEMA {FLATBUFFER_SCHEMAS_DIR "/cve5.fbs"};
const char* FB_INCLUDE_DIRECTORIES[] = {FLATBUFFER_SCHEMAS_DIR, nullptr};

const auto JSON_CVE5_VALID_ONE_BLOCK = R"(
    {
        "dataType": "CVE_RECORD",
        "dataVersion": "5.0",
        "cveMetadata": {
            "cveId": "CVE-1337-1234",
            "assignerOrgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6",
            "state": "PUBLISHED"
        },
        "containers": {
            "cna": {
                "providerMetadata": {
                    "orgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6"
                },
                "problemTypes": [
                    {
                        "descriptions": [
                            {
                                "lang": "en",
                                "description": "CWE-78 OS Command Injection"
                            }
                        ]
                    }
                ],
                "affected": [
                    {
                        "vendor": "Example.org",
                        "product": "Example Enterprise",
                        "versions": [
                            {
                                "version": "1.0.0",
                                "status": "affected",
                                "lessThan": "1.0.6",
                                "versionType": "semver"
                            }
                        ],
                        "defaultStatus": "unaffected"
                    }
                ],
                "descriptions": [
                    {
                        "lang": "en",
                        "value": "OS Command Injection vulnerability parseFilename function of example.php in the Web Management Interface of Example.org Example Enterprise on Windows, MacOS and XT-4500 allows remote unauthenticated attackers to escalate privileges.\n\nThis issue affects:\n  *  1.0 versions before 1.0.6\n  *  2.1 versions from 2.16 until 2.1.9."
                    }
                ],
                "references": [
                    {
                        "url": "https://example.org/ESA-22-11-CVE-1337-1234"
                    }
                ],
                "x_remediations": {
                    "windows": [
                        {
                            "anyOf":["KBT-800","KBT-1000","KBT-3000"],
                            "products": ["Windows 10 - HastaLaVistaBaby", "Windows 11 - RiseOfTheMachines", "Windows 12 - Genisys"],
                            "type": "update"
                        }
                    ]
                }
            }
        }
    }
)";

const auto JSON_CVE5_VALID_MULTIPLE_BLOCKS = R"(
    {
        "dataType": "CVE_RECORD",
        "dataVersion": "5.0",
        "cveMetadata": {
            "cveId": "CVE-1337-1234",
            "assignerOrgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6",
            "state": "PUBLISHED"
        },
        "containers": {
            "cna": {
                "providerMetadata": {
                    "orgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6"
                },
                "problemTypes": [
                    {
                        "descriptions": [
                            {
                                "lang": "en",
                                "description": "CWE-78 OS Command Injection"
                            }
                        ]
                    }
                ],
                "affected": [
                    {
                        "vendor": "Example.org",
                        "product": "Example Enterprise",
                        "versions": [
                            {
                                "version": "1.0.0",
                                "status": "affected",
                                "lessThan": "1.0.6",
                                "versionType": "semver"
                            }
                        ],
                        "defaultStatus": "unaffected"
                    }
                ],
                "descriptions": [
                    {
                        "lang": "en",
                        "value": "OS Command Injection vulnerability parseFilename function of example.php in the Web Management Interface of Example.org Example Enterprise on Windows, MacOS and XT-4500 allows remote unauthenticated attackers to escalate privileges.\n\nThis issue affects:\n  *  1.0 versions before 1.0.6\n  *  2.1 versions from 2.16 until 2.1.9."
                    }
                ],
                "references": [
                    {
                        "url": "https://example.org/ESA-22-11-CVE-1337-1234"
                    }
                ],
                "x_remediations": {
                    "windows": [
                        {
                            "anyOf":["KBT-800","KBT-1000","KBT-3000"],
                            "products": ["Windows 10 - HastaLaVistaBaby", "Windows 11 - RiseOfTheMachines", "Windows 12 - Genisys"],
                            "type": "update"
                        },
                        {
                            "anyOf":["KBT-4000"],
                            "products": ["Windows 10 - HastaLaVistaBaby", "Windows 11 - RiseOfTheMachines", "Windows 12 - Genisys"],
                            "type": "update"
                        },
                        {
                            "anyOf":["KBT-5000","KBT-6000"],
                            "products": ["Windows 10 - HastaLaVistaBaby", "Windows 11 - RiseOfTheMachines", "Windows 12 - Genisys"],
                            "type": "update"
                        },
                        {
                            "anyOf":["KBT-7000","KBT-8000","KBT-9000"],
                            "products": ["Windows 10 - HastaLaVistaBaby", "Windows 11 - RiseOfTheMachines", "Windows 12 - Genisys"],
                            "type": "update"
                        }
                    ]
                }
            }
        }
    }
)";

const auto JSON_CVE5_VALID_MULTIPLE_BLOCKS_SOME_WITH_NO_ANYOF = R"(
    {
        "dataType": "CVE_RECORD",
        "dataVersion": "5.0",
        "cveMetadata": {
            "cveId": "CVE-1337-1234",
            "assignerOrgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6",
            "state": "PUBLISHED"
        },
        "containers": {
            "cna": {
                "providerMetadata": {
                    "orgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6"
                },
                "problemTypes": [
                    {
                        "descriptions": [
                            {
                                "lang": "en",
                                "description": "CWE-78 OS Command Injection"
                            }
                        ]
                    }
                ],
                "affected": [
                    {
                        "vendor": "Example.org",
                        "product": "Example Enterprise",
                        "versions": [
                            {
                                "version": "1.0.0",
                                "status": "affected",
                                "lessThan": "1.0.6",
                                "versionType": "semver"
                            }
                        ],
                        "defaultStatus": "unaffected"
                    }
                ],
                "descriptions": [
                    {
                        "lang": "en",
                        "value": "OS Command Injection vulnerability parseFilename function of example.php in the Web Management Interface of Example.org Example Enterprise on Windows, MacOS and XT-4500 allows remote unauthenticated attackers to escalate privileges.\n\nThis issue affects:\n  *  1.0 versions before 1.0.6\n  *  2.1 versions from 2.16 until 2.1.9."
                    }
                ],
                "references": [
                    {
                        "url": "https://example.org/ESA-22-11-CVE-1337-1234"
                    }
                ],
                "x_remediations": {
                    "windows": [
                        {
                            "anyOf":["KBT-800","KBT-1000","KBT-3000"],
                            "products": ["Windows 10 - HastaLaVistaBaby", "Windows 11 - RiseOfTheMachines", "Windows 12 - Genisys"],
                            "type": "update"
                        },
                        {
                            "anyOf":["KBT-4000"],
                            "products": ["Windows 10 - HastaLaVistaBaby", "Windows 11 - RiseOfTheMachines", "Windows 12 - Genisys"],
                            "type": "update"
                        },
                        {
                            "products": ["Windows 10 - HastaLaVistaBaby", "Windows 11 - RiseOfTheMachines", "Windows 12 - Genisys"],
                            "type": "update"
                        },
                        {
                            "anyOf":["KBT-7000","KBT-8000","KBT-9000"],
                            "products": ["Windows 10 - HastaLaVistaBaby", "Windows 11 - RiseOfTheMachines", "Windows 12 - Genisys"],
                            "type": "update"
                        }
                    ]
                }
            }
        }
    }
)";

const auto JSON_CVE5_EMPTY_UPDATES = R"(
    {
        "dataType": "CVE_RECORD",
        "dataVersion": "5.0",
        "cveMetadata": {
            "cveId": "CVE-1337-1234",
            "assignerOrgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6",
            "state": "PUBLISHED"
        },
        "containers": {
            "cna": {
                "providerMetadata": {
                    "orgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6"
                },
                "problemTypes": [
                    {
                        "descriptions": [
                            {
                                "lang": "en",
                                "description": "CWE-78 OS Command Injection"
                            }
                        ]
                    }
                ],
                "affected": [
                    {
                        "vendor": "Example.org",
                        "product": "Example Enterprise",
                        "versions": [
                            {
                                "version": "1.0.0",
                                "status": "affected",
                                "lessThan": "1.0.6",
                                "versionType": "semver"
                            }
                        ],
                        "defaultStatus": "unaffected"
                    }
                ],
                "descriptions": [
                    {
                        "lang": "en",
                        "value": "OS Command Injection vulnerability parseFilename function of example.php in the Web Management Interface of Example.org Example Enterprise on Windows, MacOS and XT-4500 allows remote unauthenticated attackers to escalate privileges.\n\nThis issue affects:\n  *  1.0 versions before 1.0.6\n  *  2.1 versions from 2.16 until 2.1.9."
                    }
                ],
                "references": [
                    {
                        "url": "https://example.org/ESA-22-11-CVE-1337-1234"
                    }
                ],
                "x_remediations": {
                    "windows": [
                        {
                            "products": ["Windows 10 - HastaLaVistaBaby", "Windows 11 - RiseOfTheMachines", "Windows 12 - Genisys"],
                            "type": "update"
                        }
                    ]
                }
            }
        }
    }
)";

const auto JSON_CVE5_NO_REMEDIATIONS = R"(
    {
        "dataType": "CVE_RECORD",
        "dataVersion": "5.0",
        "cveMetadata": {
            "cveId": "CVE-1337-1234",
            "assignerOrgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6",
            "state": "PUBLISHED"
        },
        "containers": {
            "cna": {
                "providerMetadata": {
                    "orgId": "b3476cb9-2e3d-41a6-98d0-0f47421a65b6"
                },
                "problemTypes": [
                    {
                        "descriptions": [
                            {
                                "lang": "en",
                                "description": "CWE-78 OS Command Injection"
                            }
                        ]
                    }
                ],
                "affected": [
                    {
                        "vendor": "Example.org",
                        "product": "Example Enterprise",
                        "versions": [
                            {
                                "version": "1.0.0",
                                "status": "affected",
                                "lessThan": "1.0.6",
                                "versionType": "semver"
                            }
                        ],
                        "defaultStatus": "unaffected"
                    }
                ],
                "descriptions": [
                    {
                        "lang": "en",
                        "value": "OS Command Injection vulnerability parseFilename function of example.php in the Web Management Interface of Example.org Example Enterprise on Windows, MacOS and XT-4500 allows remote unauthenticated attackers to escalate privileges.\n\nThis issue affects:\n  *  1.0 versions before 1.0.6\n  *  2.1 versions from 2.16 until 2.1.9."
                    }
                ],
                "references": [
                    {
                        "url": "https://example.org/ESA-22-11-CVE-1337-1234"
                    }
                ],
            }
        }
    }
)";

static void UpdateHotfixesTest::SetUpTestSuite()
{
    // Validate the schema
    std::string schemaStr;
    ASSERT_TRUE(flatbuffers::LoadFile(FLATBUFFER_SCHEMA.c_str(), false, &schemaStr));

    const auto INPUTS = {JSON_CVE5_VALID_ONE_BLOCK,
                         JSON_CVE5_VALID_MULTIPLE_BLOCKS,
                         JSON_CVE5_VALID_MULTIPLE_BLOCKS_SOME_WITH_NO_ANYOF,
                         JSON_CVE5_EMPTY_UPDATES,
                         JSON_CVE5_NO_REMEDIATIONS};

    flatbuffers::Parser parser;

    // Validate that the inputs are valid
    for (const auto& input : INPUTS)
    {
        ASSERT_TRUE(parser.Parse(schemaStr.c_str(), FB_INCLUDE_DIRECTORIES) && parser.Parse(input));
        flatbuffers::Verifier verifier(parser.builder_.GetBufferPointer(), parser.builder_.GetSize());
        ASSERT_TRUE(cve_v5::VerifyEntryBuffer(verifier));
    }
};

void UpdateHotfixesTest::SetUp()
{
    std::filesystem::create_directories(COMMON_DATABASE_DIR);
};

void UpdateHotfixesTest::TearDown()
{
    std::filesystem::remove_all(COMMON_DATABASE_DIR);
};

TEST_F(UpdateHotfixesTest, UpdatesWindowsRemediationMultipleBlocks)
{
    // Define schema variable and parse JSON object.
    std::string schemaStr;

    // Load file with schema.
    flatbuffers::LoadFile(FLATBUFFER_SCHEMA.c_str(), false, &schemaStr);

    // Parse schema.
    flatbuffers::Parser parser;
    parser.Parse(schemaStr.c_str(), FB_INCLUDE_DIRECTORIES) && parser.Parse(JSON_CVE5_VALID_MULTIPLE_BLOCKS);

    // Create a test Entry object with Windows remediations
    auto buffer = parser.builder_.GetBufferPointer();
    flatbuffers::Verifier verifier(buffer, parser.builder_.GetSize());
    cve_v5::VerifyEntryBuffer(verifier);
    auto entry = cve_v5::GetEntry(buffer);

    // Create a mock RocksDBWrapper object
    std::unique_ptr<Utils::IRocksDBWrapper> rocksDBWrapper = std::make_unique<Utils::RocksDBWrapper>(DATABASE_PATH);

    // Call the updateRemediation function with the test data
    EXPECT_NO_THROW(UpdateHotfixes::storeVulnerabilityHotfixes(entry, rocksDBWrapper.get()));

    // Validate the data was inserted
    std::vector<std::string> hotfixes {
        "KBT-800",
        "KBT-1000",
        "KBT-3000",
        "KBT-4000",
        "KBT-5000",
        "KBT-6000",
        "KBT-7000",
        "KBT-8000",
        "KBT-9000",
    };

    FlatbufferDataPair<NSVulnerabilityScanner::hotfix> fbHotfix;

    const std::string expectedCveId = "CVE-1337-1234";
    for (const auto& hotfixId : hotfixes)
    {
        EXPECT_TRUE(rocksDBWrapper->get(hotfixId, fbHotfix.slice, HOTFIXES_COLUMN));
        fbHotfix.data =
            const_cast<NSVulnerabilityScanner::hotfix*>(NSVulnerabilityScanner::Gethotfix(fbHotfix.slice.data()));
        EXPECT_EQ(fbHotfix.data->CVEs()->size(), 1);
        EXPECT_STREQ(fbHotfix.data->CVEs()->Get(0)->str(), expectedCveId);
    }
}

TEST_F(UpdateHotfixesTest, DeleteHotfixes)
{
    // Define schema variable and parse JSON object.
    std::string schemaStr;

    // Load file with schema.
    flatbuffers::LoadFile(FLATBUFFER_SCHEMA.c_str(), false, &schemaStr);

    // Parse schema.
    flatbuffers::Parser parser;
    parser.Parse(schemaStr.c_str(), FB_INCLUDE_DIRECTORIES) && parser.Parse(JSON_CVE5_VALID_ONE_BLOCK);

    // Create a test Entry object with Windows remediations
    auto jbuf = parser.builder_.GetBufferPointer();
    flatbuffers::Verifier jverifier(jbuf, parser.builder_.GetSize());
    cve_v5::VerifyEntryBuffer(jverifier);
    auto entry = cve_v5::GetEntry(jbuf);

    // Create a mock RocksDBWrapper object
    std::unique_ptr<Utils::IRocksDBWrapper> rocksDBWrapper = std::make_unique<Utils::RocksDBWrapper>(DATABASE_PATH);

    // Call the updateRemediation function with the test data
    EXPECT_NO_THROW(UpdateHotfixes::storeVulnerabilityHotfixes(entry, rocksDBWrapper.get()));

    // Make sure the entries where inserted
    FlatbufferDataPair<RemediationInfo> remediationInfo;
    std::vector<std::string> hotfixes {"KBT-800", "KBT-1000", "KBT-3000"};
    for (const auto& hotfix : hotfixes)
    {
        EXPECT_TRUE(rocksDBWrapper->get(hotfix, remediationInfo.slice, HOTFIXES_COLUMN));
    }

    // Remove all but one hotfix
    EXPECT_NO_THROW(UpdateHotfixes::removeHotfix(hotfixes.at(1), rocksDBWrapper.get()));
    EXPECT_NO_THROW(UpdateHotfixes::removeHotfix(hotfixes.at(2), rocksDBWrapper.get()));

    // Check that the hotfixes were removed
    EXPECT_TRUE(rocksDBWrapper->get(hotfixes.at(0), remediationInfo.slice, HOTFIXES_COLUMN));
    EXPECT_FALSE(rocksDBWrapper->get(hotfixes.at(1), remediationInfo.slice, HOTFIXES_COLUMN));
    EXPECT_FALSE(rocksDBWrapper->get(hotfixes.at(2), remediationInfo.slice, HOTFIXES_COLUMN));
}
